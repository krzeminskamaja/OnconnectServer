/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  IsJSON,
  ValidateNested,
  IsOptional,
  IsDate,
  IsEnum,
} from "class-validator";
import { GraphQLJSONObject } from "graphql-type-json";
import { InputJsonValue } from "../../types";
import { ResourceHistoryCreateNestedManyWithoutResourcesInput } from "./ResourceHistoryCreateNestedManyWithoutResourcesInput";
import { Type } from "class-transformer";
import { KeywordCreateNestedManyWithoutResourcesInput } from "./KeywordCreateNestedManyWithoutResourcesInput";
import { EnumResourceResourceType } from "./EnumResourceResourceType";
import { ResourceSuggestionCreateNestedManyWithoutResourcesInput } from "./ResourceSuggestionCreateNestedManyWithoutResourcesInput";
@InputType()
class ResourceCreateInput {
  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  abstract!: string;

  @ApiProperty({
    required: true,
  })
  @IsJSON()
  @Field(() => GraphQLJSONObject)
  authors!: InputJsonValue;

  @ApiProperty({
    required: false,
    type: () => ResourceHistoryCreateNestedManyWithoutResourcesInput,
  })
  @ValidateNested()
  @Type(() => ResourceHistoryCreateNestedManyWithoutResourcesInput)
  @IsOptional()
  @Field(() => ResourceHistoryCreateNestedManyWithoutResourcesInput, {
    nullable: true,
  })
  historyID?: ResourceHistoryCreateNestedManyWithoutResourcesInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  image?: string | null;

  @ApiProperty({
    required: true,
    type: () => KeywordCreateNestedManyWithoutResourcesInput,
  })
  @ValidateNested()
  @Type(() => KeywordCreateNestedManyWithoutResourcesInput)
  @IsOptional()
  @Field(() => KeywordCreateNestedManyWithoutResourcesInput, {
    nullable: true,
  })
  keywordID?: KeywordCreateNestedManyWithoutResourcesInput;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  link!: string;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  relaseDate!: Date;

  @ApiProperty({
    required: true,
    enum: EnumResourceResourceType,
  })
  @IsEnum(EnumResourceResourceType)
  @Field(() => EnumResourceResourceType)
  resourceType!: "Article" | "Podcast" | "Video";

  @ApiProperty({
    required: false,
    type: () => ResourceSuggestionCreateNestedManyWithoutResourcesInput,
  })
  @ValidateNested()
  @Type(() => ResourceSuggestionCreateNestedManyWithoutResourcesInput)
  @IsOptional()
  @Field(() => ResourceSuggestionCreateNestedManyWithoutResourcesInput, {
    nullable: true,
  })
  suggestionID?: ResourceSuggestionCreateNestedManyWithoutResourcesInput;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  title!: string;
}
export { ResourceCreateInput };
