/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { IsJSON, IsOptional, IsString, ValidateNested } from "class-validator";
import { GraphQLJSONObject } from "graphql-type-json";
import { InputJsonValue } from "../../types";
import { ResourceHistoryUpdateManyWithoutUsersInput } from "./ResourceHistoryUpdateManyWithoutUsersInput";
import { Type } from "class-transformer";
import { KeywordUpdateManyWithoutUsersInput } from "./KeywordUpdateManyWithoutUsersInput";
import { ResourceSuggestionUpdateManyWithoutUsersInput } from "./ResourceSuggestionUpdateManyWithoutUsersInput";
@InputType()
class UserUpdateInput {
  @ApiProperty({
    required: false,
  })
  @IsJSON()
  @IsOptional()
  @Field(() => GraphQLJSONObject, {
    nullable: true,
  })
  calendar?: InputJsonValue;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  firstName?: string | null;

  @ApiProperty({
    required: false,
    type: () => ResourceHistoryUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => ResourceHistoryUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => ResourceHistoryUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  historyID?: ResourceHistoryUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => KeywordUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => KeywordUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => KeywordUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  interestID?: KeywordUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  lastName?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  password?: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  profession?: string;

  @ApiProperty({
    required: false,
    type: [String],
  })
  @IsString({
    each: true,
  })
  @IsOptional()
  @Field(() => [String], {
    nullable: true,
  })
  roles?: Array<string>;

  @ApiProperty({
    required: false,
    type: () => ResourceSuggestionUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => ResourceSuggestionUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => ResourceSuggestionUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  suggestionID?: ResourceSuggestionUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  username?: string;
}
export { UserUpdateInput };
