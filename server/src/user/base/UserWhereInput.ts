/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { JsonFilter } from "../../util/JsonFilter";
import { Type } from "class-transformer";
import { IsOptional, ValidateNested } from "class-validator";
import { CurrentSourceListRelationFilter } from "../../currentSource/base/CurrentSourceListRelationFilter";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { StringFilter } from "../../util/StringFilter";
import { KeywordListRelationFilter } from "../../keyword/base/KeywordListRelationFilter";
import { PastSourceListRelationFilter } from "../../pastSource/base/PastSourceListRelationFilter";
@InputType()
class UserWhereInput {
  @ApiProperty({
    required: false,
    type: JsonFilter,
  })
  @Type(() => JsonFilter)
  @IsOptional()
  @Field(() => JsonFilter, {
    nullable: true,
  })
  calendar?: JsonFilter;

  @ApiProperty({
    required: false,
    type: () => CurrentSourceListRelationFilter,
  })
  @ValidateNested()
  @Type(() => CurrentSourceListRelationFilter)
  @IsOptional()
  @Field(() => CurrentSourceListRelationFilter, {
    nullable: true,
  })
  currentSourceID?: CurrentSourceListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  firstName?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: () => KeywordListRelationFilter,
  })
  @ValidateNested()
  @Type(() => KeywordListRelationFilter)
  @IsOptional()
  @Field(() => KeywordListRelationFilter, {
    nullable: true,
  })
  intersts?: KeywordListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  lastName?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => PastSourceListRelationFilter,
  })
  @ValidateNested()
  @Type(() => PastSourceListRelationFilter)
  @IsOptional()
  @Field(() => PastSourceListRelationFilter, {
    nullable: true,
  })
  pastSourceId?: PastSourceListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  profession?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  username?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  workplace?: StringFilter;
}
export { UserWhereInput };
