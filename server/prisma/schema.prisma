datasource postgres {
  provider = "postgresql"
  url      = env("POSTGRESQL_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  calendar     Json?
  createdAt    DateTime             @default(now())
  firstName    String?
  historyID    ResourceHistory[]
  id           String               @id @default(cuid())
  interestID   Keyword[]
  lastName     String?
  password     String
  profession   String
  roles        String[]
  suggestionID ResourceSuggestion[]
  updatedAt    DateTime             @updatedAt
  username     String               @unique
}

model ResourceHistory {
  createdAt  DateTime  @default(now())
  id         String    @id @default(cuid())
  readDate   DateTime?
  sourceID   Resource  @relation(fields: [sourceIDId], references: [id])
  sourceIDId String
  updatedAt  DateTime  @updatedAt
  userID     User      @relation(fields: [userIDId], references: [id])
  userIDId   String
}

model ResourceSuggestion {
  createdAt    DateTime @default(now())
  id           String   @id @default(cuid())
  priority     Int
  ResourceID   Resource @relation(fields: [ResourceIDId], references: [id])
  ResourceIDId String
  updatedAt    DateTime @updatedAt
  userID       User     @relation(fields: [userIDId], references: [id])
  userIDId     String
}

model Resource {
  abstract     String
  authors      Json
  createdAt    DateTime                 @default(now())
  historyID    ResourceHistory[]
  id           String                   @id @default(cuid())
  imageURL     String?
  keywordID    Keyword[]
  link         String                   @unique
  relaseDate   DateTime
  resourceType EnumResourceResourceType
  suggestionID ResourceSuggestion[]
  title        String
  updatedAt    DateTime                 @updatedAt
}

model Keyword {
  childID    Keyword[]  @relation(name: "childID")
  createdAt  DateTime   @default(now())
  id         String     @id @default(cuid())
  name       String     @unique
  parentID   Keyword?   @relation(name: "childID", fields: [parentIDId], references: [id])
  parentIDId String?
  resourceID Resource[]
  synonymID  Synonym[]
  updatedAt  DateTime   @updatedAt
  userID     User[]
}

model Synonym {
  createdAt   DateTime @default(now())
  id          String   @id @default(cuid())
  keywordId   Keyword  @relation(fields: [keywordIdId], references: [id])
  keywordIdId String
  name        String   @unique
  updatedAt   DateTime @updatedAt
}

enum EnumResourceResourceType {
  Article
  Podcast
  Video
}